apiVersion: apps/v1
kind: Deployment
metadata:
  name: act-runner

spec:
  replicas: 0
  revisionHistoryLimit: 0

  selector:
    matchLabels:
      app: act-runner

  template:
    metadata:
      labels:
        app: act-runner

    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - e505.tokyotech.org
              weight: 1

      volumes:
        - name: docker-certs
          emptyDir: {}
        - name: runner-data
          emptyDir: {}
        - name: config
          configMap:
            name: act-runner

      containers:
        - name: runner
          image: gitea/act_runner:0.2.11
          imagePullPolicy: Always
          # command: ["sh", "-c", "while ! nc -z localhost 2376 </dev/null; do echo 'waiting for docker daemon...'; sleep 5; done; /sbin/tini -- /opt/act/run.sh"]
          env:
            - name: CONFIG_FILE
              value: /config/act-runner.yaml
            - name: DOCKER_HOST
              value: tcp://localhost:2376
            - name: DOCKER_CERT_PATH
              value: /certs/client
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: GITEA_INSTANCE_URL
              value: https://git.trap.jp/
            - name: GITEA_RUNNER_NAME
              value: traP-act-runner
            - name: GITEA_RUNNER_LABELS
              value: ubuntu-latest:docker://node:16-bullseye,ubuntu-22.04:docker://node:16-bullseye,ubuntu-20.04:docker://node:16-bullseye,ubuntu-18.04:docker://node:16-buster
            - name: GITEA_RUNNER_REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: act-runner
                  key: registration-token
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /certs
              name: docker-certs
            - mountPath: /data
              name: runner-data
            - mountPath: /config/act-runner.yaml
              name: config
              subPath: act-runner.yaml
              readOnly: true
          resources:
            requests:
              cpu: "10m"
              memory: "100Mi"
            limits:
              cpu: "1"
              memory: "150Mi"

        - name: daemon
          image: docker:27.4.0-dind
          args:
            # TODO: https://gitea.com/gitea/act_runner/issues/232
            # dindコンテナ中のコンテナから通信するには、docker networkのmtu (default 1500) をより小さい値にする必要がある
            # act runnerはactionsのコンテナを動かすとき新しいdocker networkを作成するが、dockerdの--mtuオプションはbridge networkの設定のみであり新規networkには継承されない
            # https://github.com/nektos/act/blob/c959fdd58835195916386b44a87632151a1b491a/pkg/container/docker_network.go#L21
            #
            # そもそもdindはこれ以外にも色々と辛いので、Kubernetes上なら直接podを作って動かす形に変えていくべき
            # https://github.com/go-gitea/gitea/issues/29567 より https://github.com/ChristopherHX/gitea-actions-runner を採用
            # -> ./gitea-act-runner.yaml を参照
            - --mtu=1350
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /certs
              name: docker-certs
          resources:
            requests:
              cpu: "10m"
              memory: "500Mi"
            limits:
              cpu: "1"
              memory: "600Mi"
