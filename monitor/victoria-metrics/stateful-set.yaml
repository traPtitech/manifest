apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: victoria-metrics

spec:
  serviceName: victoria-metrics
  replicas: 1
  revisionHistoryLimit: 0
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: victoria-metrics
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
  template:
    metadata:
      labels:
        app: victoria-metrics
    spec:
      enableServiceLinks: false
      serviceAccountName: victoria-metrics
      terminationGracePeriodSeconds: 300
      nodeSelector:
        kubernetes.io/hostname: libra.tokyotech.org

      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: tailscale-state
          emptyDir: {}
        - name: tailscale-socket
          emptyDir: {}
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
            type: CharDevice
        - name: lib-modules
          hostPath:
            path: /lib/modules
            type: Directory

      containers:
        - name: victoria-metrics
          image: victoriametrics/victoria-metrics:v1.110.0
          imagePullPolicy: IfNotPresent
          args:
            - --promscrape.config=/etc/config/prometheus.yml
            - --storageDataPath=/data
            - --retentionPeriod=30d
            - --memory.allowedPercent=60
            - --maxLabelsPerTimeseries=60
          securityContext:
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          ports:
            - containerPort: 8428
              name: http
          volumeMounts:
            - name: config
              mountPath: /etc/config
            - name: storage
              mountPath: /data
          startupProbe:
            httpGet:
              port: http
              path: /metrics
            periodSeconds: 1
            failureThreshold: 300
          readinessProbe:
            httpGet:
              port: http
              path: /metrics
            periodSeconds: 60
          livenessProbe:
            httpGet:
              port: http
              path: /metrics
            periodSeconds: 60
          resources:
            requests:
              cpu: "50m"
              memory: "300Mi"
            limits:
              cpu: "1"
              memory: "600Mi"
        - name: tailscale-sidecar
          image: ghcr.io/tailscale/tailscale:v1.80.0
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
            privileged: true
          volumeMounts:
            - name: tailscale-state
              mountPath: /var/lib/tailscale
            - name: tailscale-socket
              mountPath: /var/run/tailscale
            - name: dev-net-tun
              mountPath: /dev/net/tun
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
          env:
            - name: TS_KUBE_SECRET
            - name: TS_USERSPACE
              value: "false"
            - name: TS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: tailscale-credential
                  key: TS_AUTH_KEY
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid